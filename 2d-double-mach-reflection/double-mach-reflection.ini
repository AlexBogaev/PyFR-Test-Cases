# =============================
# RUN INSTRUCTIONS
# =============================
# cd /home/dp114856/PyFR
# source venv/bin/activate
# =============================
# SINGLE MPI RANK
# =============================
# cd /home/dp114856/scratch/PyFR/2d-double-mach-reflection
# gmsh double-mach-reflection.geo -2 -o double-mach-reflection-960x240.msh
# pyfr import double-mach-reflection-960x240.msh double-mach-reflection-960x240.pyfrm
# =============================
# RUN SINGLE MPI RANK
# =============================
# pyfr -p run -b cuda double-mach-reflection-960x240.pyfrm double-mach-reflection.ini
# pyfr -p restart -b cuda double-mach-reflection-960x240.pyfrm out_960x240/double-mach-reflection-0.190.pyfrs double-mach-reflection.ini
# =============================
# RUN MULTIPLE MPI RANKS
# =============================
#
#
# =============================
# BACKEND
# =============================

[backend]
precision = double
rank-allocator = linear

[backend-cuda]
device-id = round-robin
mpi-type = cuda-aware

# =============================
# CONSTANTS
# =============================

[constants]
# PyFR Constants
gamma = 1.4

# User Constants
r1 = 1.4
u1 = 0
v1 = 0
p1 = 1.0
r2 = 8.0
u2 = 7.14470958
v2 = -4.125
p2 = 116.5

# =============================
# SOLVER
# =============================

[solver]
system = euler
order = 3
shock-capturing = entropy-filter

[solver-entropy-filter]
d-min = 1e-6
p-min = 1e-6
e-tol = 1e-6
niters = 2

[solver-time-integrator]
scheme = rk4
controller = none
tstart = 0
tend = 0.2
dt = 5e-6

[solver-interfaces]
riemann-solver = hllc

[solver-interfaces-line]
flux-pts = gauss-legendre-lobatto

[solver-elements-quad]
soln-pts = gauss-legendre-lobatto

# =============================
# INITIALIZATION
# =============================

[soln-ics]
phi = (0.5*tanh(min(1e7*(x - 0.16666667 - (y/1.7320508)), 40)) + 0.5)
rho = r2 + (r1-r2)*%(phi)s
u = u2 + (u1-u2)*%(phi)s
v = v2 + (v1-(v2))*%(phi)s
p = p2 + (p1-p2)*%(phi)s
quad-deg = 13

# =============================
# BOUNDARY CONDITIONS
# =============================

[soln-bcs-left]
type = sup-in-fa
rho = r2
u = u2
v = v2
p = p2

[soln-bcs-right]
type = sup-in-fa
rho = r1
u = u1
v = v1
p = p1

[soln-bcs-bottom]
type = sup-in-fa
rho = r2
u = u2
v = v2
p = p2

[soln-bcs-top]
type = sup-in-fa
phi = (0.5*tanh(min(1e7*(x - 0.16666667 - (10*t/0.866025404) - 0.577350272), 40)) + 0.5)
rho = (r2 + (r1-r2)*%(phi)s)
u = (u2 + (u1-u2)*%(phi)s)
v = (v2 + (v1-(v2))*%(phi)s)
p = (p2 + (p1-p2)*%(phi)s)

[soln-bcs-wall]
type = slp-adia-wall

# =============================
# PLUGINS
# =============================

[soln-plugin-nancheck]
nsteps = 50

[soln-plugin-writer]
dt-out = 0.01
basedir = out_960x240
basename = double-mach-reflection-{t:1.3f}

# =============================
# RENDERING
# =============================

[soln-plugin-ascent]
nsteps = 200
division = 5

field-kenergy = 0.5*rho*(u*u + v*v)
scene-ke = {'render-1': {'image-name': 'plots_order3_960x240/ke-{t:1.3f}',
                        'image-width': 1920,
                        'image-height': 1080},
            'field': 'kenergy', 
            'type': 'pseudocolor',
            'color-table_name': 'Green',
            'min-value': 0, 
            'max-value': 1500}

field-rho = rho
scene-rho = {'render-1': {'image-name': 'plots_order3_960x240/rho-{t:1.3f}', 
                        'image-width': 1920,
                        'image-height': 1080},
            'field': 'rho', 
            'type': 'pseudocolor', 
            'color-table_name': 'Inferno',
            'min-value': 0, 
            'max-value': 25.0}

field-p = p
scene-p = {'render-1': {'image-name': 'plots_order3_960x240/p-{t:1.3f}',
                        'image-width': 1920,
                        'image-height': 1080}, 
            'field': 'p', 
            'type': 'pseudocolor', 
            'color-table_name': 'Cool to Warm',
            'min-value': 0, 
            'max-value': 550}

field-u = u, v
pipeline-umag = {'type': 'vector_magnitude', 
                'field': 'u', 
                'output-name': 'umag'}
scene-umag = {'render-1': {'image-name': 'plots_order3_960x240/umag-{t:1.3f}',
                        'image-width': 1920,
                        'image-height': 1080},  
            'pipeline': 'umag',
            'field': 'umag', 
            'type': 'pseudocolor', 
            'color-table_name': 'Viridis',
            'min-value': 0, 
            'max-value': 20.0}

# VTK-m Color Tables = https://ascent.readthedocs.io/en/stable/Actions/VTKmColorTables.html
