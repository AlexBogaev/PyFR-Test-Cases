# =============================
# RUN INSTRUCTIONS
# =============================
# cd /home/dp114856/PyFR
# source venv/bin/activate
# =============================
# SINGLE MPI RANK
# =============================
# cd /home/dp114856/scratch/PyFR-Test-Cases/2d-kelvin-helmholtz-euler
# gmsh periodic_square_mesh.geo -2 -o periodic_square_mesh_N256.msh
# pyfr import periodic_square_mesh_N256.msh kelvin-helmholtz-euler.pyfrm
# =============================
# RUN SINGLE MPI RANK
# =============================
# pyfr run -b cuda kelvin-helmholtz-euler.pyfrm kelvin-helmholtz-euler.ini
# pyfr restart -b cuda kelvin-helmholtz-euler.pyfrm out_order3/kelvin-helmholtz-euler-5.00.pyfrs kelvin-helmholtz-euler.ini
# =============================
# RUN MULTIPLE MPI RANKS
# =============================
#
#
# =============================
# BACKEND
# =============================

[backend]
precision = double
rank-allocator = linear

[backend-cuda]
device-id = round-robin
mpi-type = cuda-aware

# =============================
# CONSTANTS
# =============================

[constants]
# PyFR Constants
gamma = 1.4
mu = 2e-4
Pr = 0.73
rl = 120
pl = 85.7142857143
rr = 1.2
pr = 0.857142857143
# User Defined Constants
slope = 15
amplitude = 0.02

# =============================
# SOLVER
# =============================

[solver]
system = euler
order = 4
shock-capturing = entropy-filter

[solver-entropy-filter]
d-min = 1e-6
p-min = 1e-6
e-tol = 1e-6

[solver-time-integrator]
formulation = std
scheme = rk45
controller = none
tstart = 0
tend = 15
dt = 5e-5

[solver-interfaces]
riemann-solver = hllc
ldg-beta = 0.5
ldg-tau = 0.1

[solver-interfaces-line]
flux-pts = gauss-legendre-lobatto

[solver-elements-quad]
soln-pts = gauss-legendre-lobatto

# =============================
# INITIALIZATION
# =============================

[soln-ics]
B = (tanh(15*y+7.5)-tanh(15*y-7.5))
rho = 0.5 + 0.75*%(B)s
u = 0.5*(%(B)s - 1)
v = 0.1*sin(2*pi*x)
p = 1.0

# =============================
# BOUNDARY CONDITIONS
# =============================
# N/A

# =============================
# PLUGINS
# =============================

[soln-plugin-nancheck]
nsteps = 50

[soln-plugin-writer]
dt-out = 1.0
basedir = out_order4_128x128
basename = kelvin-helmholtz-euler-{t:.2f}
post-action = echo "Wrote file {soln} at time {t} for mesh {mesh}."

# =============================
# RENDERING
# =============================

[soln-plugin-ascent]
nsteps = 500
division = 5

field-kenergy = 0.5*rho*(u*u + v*v)
scene-ke = {'render-1': {'image-name': 'plots_order4_128x128/ke-{t:4.2f}',
                        'image-width': 1920,
                        'image-height': 1080},
            'field': 'kenergy', 
            'type': 'pseudocolor',
            'color-table_name': 'Green',
            'min-value': 0.0, 
            'max-value': 1.0}

field-rho = rho
scene-rho = {'render-1': {'image-name': 'plots_order4_128x128/rho-{t:4.2f}', 
                        'image-width': 1920,
                        'image-height': 1080},
            'field': 'rho', 
            'type': 'pseudocolor', 
            'color-table_name': 'Inferno',
            'min-value': 0.25, 
            'max-value': 2.5}

field-p = p
scene-p = {'render-1': {'image-name': 'plots_order4_128x128/p-{t:4.2f}',
                        'image-width': 1920,
                        'image-height': 1080}, 
            'field': 'p', 
            'type': 'pseudocolor', 
            'color-table_name': 'Cool to Warm',
            'min-value': 0.75, 
            'max-value': 1.25}

field-u = u, v
pipeline-umag = {'type': 'vector_magnitude', 
                'field': 'u', 
                'output-name': 'umag'}
scene-umag = {'render-1': {'image-name': 'plots_order4_128x128/umag-{t:4.2f}',
                        'image-width': 1920,
                        'image-height': 1080},  
            'pipeline': 'umag',
            'field': 'umag', 
            'type': 'pseudocolor', 
            'color-table_name': 'Viridis',
            'min-value': 0.0, 
            'max-value': 1.5}

# VTK-m Color Tables = https://ascent.readthedocs.io/en/stable/Actions/VTKmColorTables.html
